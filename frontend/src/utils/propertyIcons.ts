import React from 'react';

// –ú–∞–ø–ø–∏–Ω–≥ —Å–≤–æ–π—Å—Ç–≤ –Ω–∞ –∏–∫–æ–Ω–∫–∏
export const PROPERTY_ICONS: Record<string, string> = {
  'consumable': 'üß™', // –ó–µ–ª—å–µ
  'single_use': 'üí•', // –í–∑—Ä—ã–≤
  'light': 'ü™∂', // –ü–µ—Ä–æ
  'heavy': '‚öíÔ∏è', // –ú–æ–ª–æ—Ç
  'finesse': '‚öîÔ∏è', // –°–∫—Ä–µ—â–µ–Ω–Ω—ã–µ –º–µ—á–∏
  'thrown': 'üèπ', // –õ—É–∫ —Å–æ —Å—Ç—Ä–µ–ª–æ–π
  'versatile': 'üñêÔ∏è', // –†—É–∫–∞
  'two-handed': 'ü§≤', // –î–≤–µ —Ä—É–∫–∏
  'reach': 'üëÜ', // –£–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞–ª–µ—Ü
  'ammunition': 'üèπ', // –õ—É–∫
  'loading': 'üéØ', // –ú–∏—à–µ–Ω—å
  'special': '‚≠ê', // –ó–≤–µ–∑–¥–∞
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–∫–æ–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞
export const shouldShowIcons = (properties: string[], maxTextLength: number = 30): boolean => {
  const textLength = properties.map(p => getPropertyLabel(p)).join(', ').length;
  return textLength > maxTextLength;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ —Å–≤–æ–π—Å—Ç–≤–∞
export const getPropertyIcon = (property: string): string => {
  return PROPERTY_ICONS[property] || '‚ùì';
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤ —Å –∏–∫–æ–Ω–∫–∞–º–∏
export const renderProperties = (properties: string[], maxTextLength: number = 30): React.ReactElement => {
  if (shouldShowIcons(properties, maxTextLength)) {
    return React.createElement('div', { className: 'flex items-center space-x-1' },
      properties.map((property, index) => 
        React.createElement('span', { 
          key: index, 
          className: 'text-lg', 
          title: getPropertyLabel(property) 
        }, getPropertyIcon(property))
      )
    );
  } else {
    return React.createElement('span', {}, 
      properties.map(p => getPropertyLabel(p)).join(', ')
    );
  }
};

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–∑ propertyLabels
import { getPropertyLabel } from './propertyLabels';
