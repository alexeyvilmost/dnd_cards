package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"time"
)

type AuthResponse struct {
	Token string `json:"token"`
}

type Card struct {
	ID                  string `json:"id"`
	Name                string `json:"name"`
	Type                string `json:"type"`
	Rarity              string `json:"rarity"`
	Description         string `json:"description"`
	DetailedDescription string `json:"detailed_description"`
}

type CardsResponse struct {
	Cards []Card `json:"cards"`
}

type UpdateCardRequest struct {
	DetailedDescription string `json:"detailed_description"`
}

// Полные описания зелий с dnd.su
var potionDescriptions = map[string]string{
	"Зелье долголетия": `Зелье долголетия - это редкое магическое зелье, которое замедляет процесс старения. При употреблении персонаж получает эффект, который может продлить его жизнь на годы или даже десятилетия. Зелье имеет горький вкус и золотистый цвет. Эффект зелья необратим и действует на протяжении всей жизни персонажа.`,

	"Зелье лечения": `Зелье лечения - одно из самых распространенных магических зелий в мире D&D. При употреблении восстанавливает от 2d4+2 до 4d4+4 хитов в зависимости от редкости. Зелье имеет красный цвет и сладкий вкус. Стандартное зелье лечения восстанавливает 2d4+2 хитов, большое зелье лечения - 4d4+4 хитов, а зелье высшего лечения - 8d4+8 хитов.`,

	"Зелье подводного дыхания": `Зелье подводного дыхания позволяет персонажу дышать под водой в течение 1 часа. При употреблении персонаж может свободно плавать и дышать в любой водной среде, включая океаны, озера и реки. Зелье имеет голубой цвет и соленый вкус. Эффект не защищает от давления на больших глубинах.`,

	"Зелье скорости": `Зелье скорости значительно увеличивает скорость передвижения персонажа. При употреблении скорость увеличивается в два раза, а также персонаж получает дополнительное действие в каждом раунде боя. Зелье имеет серебристый цвет и острый вкус. Эффект длится 1 минуту.`,

	"Зелье чтения мыслей": `Зелье чтения мыслей дает персонажу способность читать мысли других существ. При употреблении персонаж может использовать действие для чтения мыслей существа в радиусе 30 футов. Зелье имеет фиолетовый цвет и металлический вкус. Эффект длится 1 час.`,

	"Зелье дружбы с животными": `Зелье дружбы с животными делает всех животных в радиусе 30 футов дружелюбными к пьющему. При употреблении персонаж может общаться с животными и получает преимущество на проверки Харизмы против них. Зелье имеет зеленый цвет и травяной вкус. Эффект длится 1 час.`,

	"Зелье невидимости": `Зелье невидимости делает персонажа полностью невидимым. При употреблении персонаж становится невидимым на 1 час или до тех пор, пока не атакует или не накладывает заклинание. Зелье имеет прозрачный цвет и безвкусное. Атака или наложение заклинания прерывает эффект невидимости.`,

	"Зелье полёта": `Зелье полёта дает персонажу способность летать. При употреблении персонаж получает скорость полета 60 футов и может летать в любом направлении. Зелье имеет белый цвет и легкий вкус. Эффект длится 1 час. Персонаж должен быть осторожен, чтобы не упасть, если эффект закончится в воздухе.`,

	"Зелье сопротивления": `Зелье сопротивления повышает сопротивляемость персонажа к определенному типу урона. При употреблении персонаж получает сопротивление к одному типу урона (огонь, холод, молния, кислота, яд, некротический, лучевой, гром, психический, силовой) на 1 час. Зелье имеет цвет, соответствующий типу урона.`,

	"Зелье яда": `Зелье яда - это опасное зелье, которое наносит урон при употреблении. При употреблении персонаж получает урон ядом и должен совершить спасбросок Телосложения. При провале персонаж получает урон и может быть отравлен. Зелье имеет темно-зеленый цвет и горький вкус. Обычно используется для отравления врагов.`,

	"Зелье газообразной формы": `Зелье газообразной формы превращает персонажа в газообразное состояние. При употреблении персонаж становится невесомым газом, который может проходить через трещины и отверстия. Зелье имеет серый цвет и безвкусное. Эффект длится 1 час. В газообразной форме персонаж не может атаковать или использовать заклинания.`,

	"Зелье живучести": `Зелье живучести повышает выносливость и сопротивляемость персонажа. При употреблении персонаж получает временные хиты и преимущество на спасброски Телосложения. Зелье имеет коричневый цвет и землистый вкус. Эффект длится 24 часа. Персонаж чувствует себя более здоровым и энергичным.`,

	"Зелье неуязвимости": `Зелье неуязвимости делает персонажа временно неуязвимым к определенным типам урона. При употреблении персонаж получает иммунитет к одному типу урона на 10 минут. Зелье имеет золотой цвет и металлический вкус. Это очень редкое и мощное зелье, которое может спасти жизнь в критической ситуации.`,

	"Зелье силы великана": `Зелье силы великана значительно увеличивает физическую силу персонажа. При употреблении значение Силы персонажа увеличивается до 21, а также он получает преимущество на проверки Силы. Зелье имеет красный цвет и горький вкус. Эффект длится 1 час. Персонаж чувствует прилив невероятной силы.`,

	"Зелье увеличения": `Зелье увеличения увеличивает размер персонажа. При употреблении персонаж становится на одну категорию размера больше и получает преимущество на проверки Силы. Зелье имеет синий цвет и сладкий вкус. Эффект длится 1d4 часа. Увеличенный персонаж занимает больше места и может не поместиться в узких проходах.`,

	"Зелье ясновидения": `Зелье ясновидения дает персонажу способность видеть скрытое и далекое. При употреблении персонаж получает истинное зрение, может видеть невидимых существ и получает преимущество на проверки Мудрости. Зелье имеет фиолетовый цвет и горький вкус. Эффект длится 1 час.`,

	"Зелье героизма": `Зелье героизма повышает боевой дух и отвагу персонажа. При употреблении персонаж получает временные хиты и преимущество на спасброски от страха. Зелье имеет золотой цвет и сладкий вкус. Эффект длится 1 час. Персонаж чувствует себя более смелым и решительным.`,

	"Зелье лазания": `Зелье лазания улучшает способность персонажа к лазанию. При употреблении персонаж получает скорость лазания, равную его скорости ходьбы, и преимущество на проверки Атлетики для лазания. Зелье имеет зеленый цвет и травяной вкус. Эффект длится 1 час. Персонаж может легко взбираться по стенам и деревьям.`,

	"Зелье огненного дыхания": `Зелье огненного дыхания дает персонажу способность дышать огнем. При употреблении персонаж может использовать действие для дыхания огнем в конусе 15 футов, нанося урон огнем всем существам в области. Зелье имеет оранжевый цвет и острый вкус. Эффект длится 1 час.`,

	"Зелье силы холмового великана": `Зелье силы холмового великана увеличивает силу персонажа до уровня холмового великана. При употреблении значение Силы персонажа увеличивается до 21, а также он получает преимущество на проверки Силы. Зелье имеет коричневый цвет и землистый вкус. Эффект длится 1 час. Это более мощная версия обычного зелья силы великана.`,

	"Зелье уменьшения": `Зелье уменьшения уменьшает размер персонажа. При употреблении персонаж становится на одну категорию размера меньше и получает штраф к проверкам Силы, но преимущество на проверки Ловкости. Зелье имеет фиолетовый цвет и кислый вкус. Эффект длится 1d4 часа. Уменьшенный персонаж может проходить через узкие проходы.`,
}

func main() {
	// Получаем токен авторизации
	token, err := getAuthToken()
	if err != nil {
		fmt.Printf("Ошибка получения токена: %v\n", err)
		return
	}

	fmt.Printf("Получен токен авторизации\n")

	// Получаем список зелий
	potions, err := getPotions(token)
	if err != nil {
		fmt.Printf("Ошибка получения списка зелий: %v\n", err)
		return
	}

	fmt.Printf("Найдено %d зелий для добавления описаний\n", len(potions))

	// Добавляем описания
	updatedCount := 0
	for i, potion := range potions {
		fmt.Printf("Обновляем описание %d/%d: %s\n", i+1, len(potions), potion.Name)

		// Получаем полное описание
		detailedDescription, exists := potionDescriptions[potion.Name]
		if !exists {
			fmt.Printf("  ⚠ Нет описания для: %s\n", potion.Name)
			continue
		}

		err := updatePotionDescription(potion.ID, detailedDescription, token)
		if err != nil {
			fmt.Printf("  ✗ Ошибка: %v\n", err)
			continue
		}

		updatedCount++
		fmt.Printf("  ✓ Описание добавлено для: %s\n", potion.Name)

		// Пауза между запросами
		time.Sleep(200 * time.Millisecond)
	}

	fmt.Printf("\nВсего обновлено %d описаний\n", updatedCount)
}

func getAuthToken() (string, error) {
	// Сначала пытаемся зарегистрироваться
	registerData := map[string]string{
		"username":     "admin",
		"password":     "admin123",
		"email":        "admin@example.com",
		"display_name": "Admin",
	}

	jsonData, err := json.Marshal(registerData)
	if err != nil {
		return "", err
	}

	// Регистрируемся (игнорируем ошибку, если пользователь уже существует)
	http.Post("http://localhost:8080/api/auth/register", "application/json", bytes.NewBuffer(jsonData))

	// Теперь авторизуемся
	resp, err := http.Post("http://localhost:8080/api/auth/login", "application/json", bytes.NewBuffer(jsonData))
	if err != nil {
		return "", err
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		body, _ := io.ReadAll(resp.Body)
		return "", fmt.Errorf("ошибка авторизации: %s", string(body))
	}

	// Парсим ответ
	var authResp AuthResponse
	err = json.NewDecoder(resp.Body).Decode(&authResp)
	if err != nil {
		return "", err
	}

	return authResp.Token, nil
}

func getPotions(token string) ([]Card, error) {
	// Создаем HTTP запрос - получаем только зелья
	req, err := http.NewRequest("GET", "http://localhost:8080/api/cards?type=зелье&is_template=only_template&limit=100", nil)
	if err != nil {
		return nil, err
	}

	// Добавляем заголовки
	req.Header.Set("Authorization", "Bearer "+token)

	// Отправляем запрос
	client := &http.Client{Timeout: 10 * time.Second}
	resp, err := client.Do(req)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		body, _ := io.ReadAll(resp.Body)
		return nil, fmt.Errorf("ошибка получения карт: %s", string(body))
	}

	// Парсим ответ
	var cardsResp CardsResponse
	err = json.NewDecoder(resp.Body).Decode(&cardsResp)
	if err != nil {
		return nil, err
	}

	return cardsResp.Cards, nil
}

func updatePotionDescription(cardID, detailedDescription, token string) error {
	// Создаем запрос для обновления
	request := UpdateCardRequest{
		DetailedDescription: detailedDescription,
	}

	jsonData, err := json.Marshal(request)
	if err != nil {
		return err
	}

	// Создаем HTTP запрос
	req, err := http.NewRequest("PUT", "http://localhost:8080/api/cards/"+cardID, bytes.NewBuffer(jsonData))
	if err != nil {
		return err
	}

	// Добавляем заголовки
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Authorization", "Bearer "+token)

	// Отправляем запрос
	client := &http.Client{Timeout: 10 * time.Second}
	resp, err := client.Do(req)
	if err != nil {
		return err
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		body, _ := io.ReadAll(resp.Body)
		return fmt.Errorf("ошибка обновления карты: %s", string(body))
	}

	return nil
}
